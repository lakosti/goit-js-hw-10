{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst input = document.querySelector('#datetime-picker');\nconst btn = document.querySelector('button');\nconst day = document.querySelector('[data-days]');\nconst hour = document.querySelector('[data-hours]');\nconst minute = document.querySelector('[data-minutes]');\nconst second = document.querySelector('[data-seconds]');\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    let userSelectedDate = selectedDates[0];\n    if (userSelectedDate >= options.defaultDate) {\n      btn.disabled = false;\n      iziToast.success({\n        title: 'OK',\n        message: 'Successfully!',\n        position: 'topCenter',\n      });\n    } else {\n      iziToast.error({\n        title: 'Error',\n        message: '\"Please choose a date in the future\"',\n        position: 'topCenter',\n      });\n    }\n  },\n};\nflatpickr(input, options);\nbtn.addEventListener('click', onclick);\n\nfunction onclick() {\n  btn.disabled = true;\n  input.disabled = true;\n  const timeoutId = setInterval(() => {\n    const date = new Date();\n    const dateInFuture = new Date(input.value);\n    const diff = dateInFuture - date;\n\n    const { days, hours, minutes, seconds } = convertMs(diff);\n\n    day.textContent = days.toString().padStart(2, '0');\n    hour.textContent = hours.toString().padStart(2, '0');\n    minute.textContent = minutes.toString().padStart(2, '0');\n    second.textContent = seconds.toString().padStart(2, '0');\n\n    if (!minutes && !seconds) {\n      clearInterval(timeoutId);\n      btn.disabled = false;\n      input.disabled = false;\n    }\n  }, 1000);\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["input","btn","day","hour","minute","second","options","selectedDates","iziToast","flatpickr","onclick","timeoutId","date","diff","days","hours","minutes","seconds","convertMs","ms"],"mappings":"sGAKA,MAAMA,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAM,SAAS,cAAc,QAAQ,EACrCC,EAAM,SAAS,cAAc,aAAa,EAC1CC,EAAO,SAAS,cAAc,cAAc,EAC5CC,EAAS,SAAS,cAAc,gBAAgB,EAChDC,EAAS,SAAS,cAAc,gBAAgB,EAEhDC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACEA,EAAc,IACbD,EAAQ,aAC9BL,EAAI,SAAW,GACfO,EAAS,QAAQ,CACf,MAAO,KACP,QAAS,gBACT,SAAU,WAClB,CAAO,GAEDA,EAAS,MAAM,CACb,MAAO,QACP,QAAS,uCACT,SAAU,WAClB,CAAO,CAEJ,CACH,EACAC,EAAUT,EAAOM,CAAO,EACxBL,EAAI,iBAAiB,QAASS,CAAO,EAErC,SAASA,GAAU,CACjBT,EAAI,SAAW,GACfD,EAAM,SAAW,GACjB,MAAMW,EAAY,YAAY,IAAM,CAClC,MAAMC,EAAO,IAAI,KAEXC,EADe,IAAI,KAAKb,EAAM,KAAK,EACbY,EAEtB,CAAE,KAAAE,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAI,EAExDX,EAAI,YAAcY,EAAK,SAAU,EAAC,SAAS,EAAG,GAAG,EACjDX,EAAK,YAAcY,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,EACnDX,EAAO,YAAcY,EAAQ,SAAU,EAAC,SAAS,EAAG,GAAG,EACvDX,EAAO,YAAcY,EAAQ,SAAU,EAAC,SAAS,EAAG,GAAG,EAEnD,CAACD,GAAW,CAACC,IACf,cAAcN,CAAS,EACvBV,EAAI,SAAW,GACfD,EAAM,SAAW,GAEpB,EAAE,GAAI,CACT,CAEA,SAASkB,EAAUC,EAAI,CAMrB,MAAML,EAAO,KAAK,MAAMK,EAAK,KAAG,EAC1BJ,EAAQ,KAAK,MAAOI,EAAK,MAAO,IAAI,EACpCH,EAAU,KAAK,MAAQG,EAAK,MAAO,KAAQ,GAAM,EACjDF,EAAU,KAAK,MAASE,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAL,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}