{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst input = document.querySelector('#datetime-picker');\nconst btn = document.querySelector('button');\nconst day = document.querySelector('[data-days]');\nconst hour = document.querySelector('[data-hours]');\nconst minute = document.querySelector('[data-minutes]');\nconst second = document.querySelector('[data-seconds]');\n\nlet userTime;\nbtn.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userTime = selectedDates[0];\n    checkDate(userTime);\n  },\n};\nflatpickr(input, options);\n\nbtn.addEventListener('click', onclick);\n\nfunction onclick() {\n  btn.disabled = true;\n  input.disabled = true;\n\n  const timeoutId = setInterval(() => {\n    const date = Date.now();\n    const diff = userTime - date;\n    const { days, hours, minutes, seconds } = convertMs(diff);\n\n    function addLeadingZero(value) {\n      return value.toString().padStart(2, '0');\n    }\n\n    day.textContent = addLeadingZero(days);\n    hour.textContent = addLeadingZero(hours);\n    minute.textContent = addLeadingZero(minutes);\n    second.textContent = addLeadingZero(seconds);\n\n    if (!minutes && !seconds) {\n      clearInterval(timeoutId);\n      btn.disabled = true;\n      input.disabled = false;\n    }\n  }, 1000);\n}\n\nfunction checkDate(userTime) {\n  if (userTime >= options.defaultDate) {\n    btn.disabled = false;\n    iziToast.success({\n      title: 'OK',\n      message: 'Successfully!',\n      position: 'topCenter',\n    });\n  } else {\n    btn.disabled = true;\n    iziToast.error({\n      title: 'Error',\n      message: '\"Please choose a date in the future\"',\n      position: 'topCenter',\n    });\n  }\n}\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["input","btn","day","hour","minute","second","userTime","options","selectedDates","checkDate","flatpickr","onclick","timeoutId","date","diff","days","hours","minutes","seconds","convertMs","addLeadingZero","value","iziToast","ms"],"mappings":"2GAKA,MAAMA,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAM,SAAS,cAAc,QAAQ,EACrCC,EAAM,SAAS,cAAc,aAAa,EAC1CC,EAAO,SAAS,cAAc,cAAc,EAC5CC,EAAS,SAAS,cAAc,gBAAgB,EAChDC,EAAS,SAAS,cAAc,gBAAgB,EAEtD,IAAIC,EACJL,EAAI,SAAW,GAEf,MAAMM,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBF,EAAWE,EAAc,GACzBC,EAAUH,CAAQ,CACnB,CACH,EACAI,EAAUV,EAAOO,CAAO,EAExBN,EAAI,iBAAiB,QAASU,CAAO,EAErC,SAASA,GAAU,CACjBV,EAAI,SAAW,GACfD,EAAM,SAAW,GAEjB,MAAMY,EAAY,YAAY,IAAM,CAClC,MAAMC,EAAO,KAAK,MACZC,EAAOR,EAAWO,EAClB,CAAE,KAAAE,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAI,EAExD,SAASM,EAAeC,EAAO,CAC7B,OAAOA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,CACxC,CAEDnB,EAAI,YAAckB,EAAeL,CAAI,EACrCZ,EAAK,YAAciB,EAAeJ,CAAK,EACvCZ,EAAO,YAAcgB,EAAeH,CAAO,EAC3CZ,EAAO,YAAce,EAAeF,CAAO,EAEvC,CAACD,GAAW,CAACC,IACf,cAAcN,CAAS,EACvBX,EAAI,SAAW,GACfD,EAAM,SAAW,GAEpB,EAAE,GAAI,CACT,CAEA,SAASS,EAAUH,EAAU,CACvBA,GAAYC,EAAQ,aACtBN,EAAI,SAAW,GACfqB,EAAS,QAAQ,CACf,MAAO,KACP,QAAS,gBACT,SAAU,WAChB,CAAK,IAEDrB,EAAI,SAAW,GACfqB,EAAS,MAAM,CACb,MAAO,QACP,QAAS,uCACT,SAAU,WAChB,CAAK,EAEL,CACA,SAASH,EAAUI,EAAI,CAMrB,MAAMR,EAAO,KAAK,MAAMQ,EAAK,KAAG,EAC1BP,EAAQ,KAAK,MAAOO,EAAK,MAAO,IAAI,EACpCN,EAAU,KAAK,MAAQM,EAAK,MAAO,KAAQ,GAAM,EACjDL,EAAU,KAAK,MAASK,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAR,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}